---
- name: 1. Habilitar transparent masquerading
  modprobe:
    name: br_netfilter
    state: present
  become: true

- name: 1. Habilitar transparent masquerading Add masquerade permanent
  shell: firewall-cmd --add-masquerade --permanent
  notify: Reload firewalld

- name: 1. Habilitar transparent masquerading /etc/sysctl.d/k8s.conf
  copy:
    dest: "/etc/sysctl.d/k8s.conf"
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
  become: true

- name: 1. Habilitar transparent masquerading Habilitar y reiniciar el servicio firewalld
  systemd:
    name: firewalld
    state: restarted
    enabled: yes
    masked: no
  become: true

- name: 2. Desactivar la partición de swap
  shell: swapoff -a
  become: true
  
- name: 2. Desactivar la partición de swap - Comentamos la línea de la particion swap del /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+.*)$'
    replace: '# \1'
  become: true

- name: 3. Instalación de CRI-O como runtime en CentOS Stream 8
  get_url:
    url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/devel:kubic:libcontainers:stable.repo
    dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo
    environment:
    VERSION: 1.24
    OS: CentOS_8_Stream

- name: 3. Instalación de CRI-O como runtime en CentOS Stream 8
  get_url:
    url: https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo
    dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo
    environment:
    VERSION: 1.24
    OS: CentOS_8_Stream

- name: 3. Instalación de CRI-O como runtime en CentOS Stream 8 yum
  yum:
    name: cri-o
    state: latest
    
- name: 4. Habilitar los módulos de kernel necesarios
  blockinfile:
    path: /etc/modules-load.d/crio.conf
    block: |
      overlay
      br_netfilter
    insertbefore: 'EOF'
    state: present
  ignore_errors: true

- name: 5. Habilitar e iniciar el servicio de cri-o
  systemd:
    name: cri-o
    state: started
    enabled: yes
    daemon_reload: yes

- name: 6. Habilitar el repositorio de Kubernetes
  blockinfile:
    path: /etc/yum.repos.d/kubernetes.repo
    block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
      enabled=1
      gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      exclude=kubelet kubeadm kubectl
    insertbefore: 'EOF'
    state: present
  ignore_errors: true

- name: 7. Instalar kubernetes
  yum:
    name: "{{ item }}"
    state: latest
    with_items:
      - kubelet 
      - kubeadm 
      - kubectl

- name: 8. Habilitar e iniciar el servicio de kubelet
  systemd:
    name: kubelet
    state: started
    enabled: yes
    daemon_reload: yes
