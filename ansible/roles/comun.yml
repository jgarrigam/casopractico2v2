- name: Configurar el hostname
  hostname:
    name: "{{inventory_hostname}}.{{kubernets_domain}}"
    use: systemd
  when: inventory_hostname is regex("work*|master*")
  become: yes

- name: Agregar los DNS de los demás hosts
  blockinfile:
    path: /etc/hosts
    block: |
      {{ item.ip }} {{ item.name }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
  loop:
    - { name: master, ip: 10.0.1.101 }
    - { name: worker, ip: 10.0.1.102 }
    - { name: nfs, ip: 10.0.1.103 }

- name: Actualizar los paquetes 
  dnf:
    name: "*"
    state: latest
  become: yes

- name: Configurar el timezone
  timezone:
    name: Europe/Madrid (CEST, +0200)
  become: yes

  - name: Instalar Chrony
  dnf:
    name: chrony
    state: present
  become: yes
  
- name: Habilitar Chronyd
  systemd:
    name: chronyd
    state: started
    enabled: yes
    masked: no
  become: yes

  - name: Instalar firewall
  dnf:
    name: firewalld
    state: present
  become: yes
  
- name: Habilitar firewalld
  systemd:
    name: firewalld
    state: started
    enabled: yes
    masked: no
  become: yes

- name: Deshabilitar la seguridad SELinux
  selinux:
    state: disabled
  become: yes

- name: Add the br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    state: present


- name: Habilitar transparent masquerading
  firewalld:
      #zone: SmazMe
      masquerade: yes
      permanent: true
      state: enabled

- name: Reiniciamos el servicio Firewalld 
  systemd:
    name: firewalld
    state: restarted
  become: yes

- name: Desactivamos Swap
  shell: swapoff -a
  become: yes

- name: Comprovación paquetes necesarios CRI-O
    yum:
      name: "{{ item }}"
      state: latest
      with_items:
        - btrfs-progs-devel
        - container-selinux
        - device-mapper-devel
        - gcc
        - git
        - glib2-devel
        - glibc-devel
        - glibc-static
        - go-md2man
        - golang
        - gpgme-devel
        - json-glib-devel
        - libassuan-devel
        - libgpg-error-devel
        - libseccomp-devel
        - make
        - pkgconfig
        - skopeo-containers
        - tar
        - wget

- name: Make directories
      file:
        path: "{{ item }}"
        state: directory
      with_items:
           - /usr/local/go
           - /etc/systemd/system/kubelet.service.d/
           - /var/lib/etcd
           - /etc/cni/net.d
           - /etc/containers

- name: clone runc
  git:
    repo: https://github.com/opencontainers/runc
    dest: /root/src/github.com/opencontainers/runc

- name: clone CRI-O
  git:
    repo: https://github.com/kubernetes-incubator/cri-o
    dest: /root/src/github.com/kubernetes-incubator/cri-o
    version: kube-1.6.x

- name: clone CNI
  git:
    repo: https://github.com/containernetworking/plugins
    dest: /root/src/github.com/containernetworking/plugins

- name: build runc
    shell: |
      cd /root/src/github.com/opencontainers/runc && \
      export GOPATH=/root && \
      make BUILDTAGS="seccomp selinux" && \
      make install

- name: link runc
    file: src=/usr/local/sbin/runc dest=/usr/bin/runc state=link force=yes

- name: build cri-o
    shell: |
        cd /root/src/github.com/kubernetes-incubator/cri-o && \
        make install.tools && \
        make && \
        make install && \
        make install.systemd && \
        make install.config
